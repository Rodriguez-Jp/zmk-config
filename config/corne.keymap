/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_es.h"
#include <behaviors/unicode.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&uc {
    default-mode = <UC_MODE_LINUX>;
    minimum-length = <0>;            // Set to desired minimum input length
    win-compose-key = <RALT>;        // Overwrite WinCompose compose key
};

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 12 24 25 13 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 36 37>;
            hold-trigger-on-release;
        };

        HMR_Layer: HMR_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        HML_Layer: HML_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    macros {
        a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_A>;
            label = "A_TILDE";
        };

        e_tilde: e_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_E>;
            label = "E_TILDE";
        };

        i_tilde: i_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_I>;
            label = "I_TILDE";
        };

        o_tilde: o_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_O>;
            label = "O_TILDE";
        };

        u_tilde: u_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_ACUTE &kp ES_U>;
            label = "U_TILDE";
        };

        u_doblepunto: u_doblepunto {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_UMLAUT &kp ES_U>;
            label = "U_DOBLEPUNTO";
        };

        switch_tab_forward: switch_tab_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp TAB>;
            label = "SWITCH_TAB_FORWARD";
        };

        switch_tab_backwards: switch_tab_backwards {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT_SHIFT &kp TAB>;
            label = "SWITCH_TAB_BACKWARDS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q            &kp W           &kp E              &kp R           &kp T             &kp Y           &kp U           &kp I                 &kp O           &kp P              &kp BACKSLASH
&kp BACKSPACE  &HML LEFT_WIN A  &HML_Layer 1 S  &HML LEFT_SHIFT D  &HML_Layer 2 F  &HML_Layer 3 G    &HMR_Layer 3 H  &HMR_Layer 2 J  &HMR RIGHT_SHIFT K    &HMR_Layer 1 L  &uc UC_ES_N_TILDE  &kp SEMI
&kp ESCAPE     &kp Z            &kp X           &HML C LEFT_ALT    &HML LCTRL V    &kp B             &kp N           &HMR RCTRL M    &HMR COMMA RIGHT_ALT  &kp DOT         &kp FSLH           &kp MINUS
                                                &kp LGUI           &mo 4           &kp SPACE         &kp RET         &mo 4           &kp RIGHT_GUI
            >;
        };

        Symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR     &kp GRAVE        &kp LESS_THAN  &kp GREATER_THAN  &kp UNDER          &kp PIPE         &kp CARET    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR     &uc 0xBF 0         &uc 0x3F 0
&kp BACKSPACE  &kp EXCLAMATION  &kp ASTERISK   &kp SLASH         &kp EQUAL          &kp AMPERSAND    &kp HASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp DOUBLE_QUOTES  &bt BT_SEL 1
&bt BT_SEL 0   &kp TILDE        &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT      &kp AT_SIGN  &kp COLON             &kp COMMA              &kp PERIOD     &kp SINGLE_QUOTE   &bt BT_SEL 2
                                               &trans            &kp DELETE         &kp SPACE        &kp RET      &trans                &trans
            >;
        };

        Num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB        &kp SLASH         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK    &none    &none   &none      &none              &none  &none
&kp BACKSPACE  &kp MINUS         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS        &none    &none   &kp E      &kp RIGHT_CONTROL  &none  &none
&kp LSHFT      &kp LEFT_CONTROL  &kp N7        &kp N8        &kp N9        &kp PERCENT     &none    &none   &kp COMMA  &kp PERIOD         &none  &none
                                               &trans        &trans        &kp SPACE       &kp RET  &trans  &trans
            >;
        };

        Nav_Layer {
            bindings = <
&none          &none  &kp END       &none              &kp HOME  &kp PAGE_UP      &none           &switch_tab_backwards  &switch_tab_forward  &none      &none  &none
&kp BACKSPACE  &none  &none         &none              &none     &kp PAGE_DOWN    &kp LEFT_ARROW  &kp DOWN_ARROW         &kp UP_ARROW         &kp RIGHT  &none  &none
&none          &none  &kp C_VOL_UP  &kp C_VOLUME_DOWN  &none     &none            &none           &none                  &none                &none      &none  &none
                                    &trans             &trans    &kp SPACE        &kp ENTER       &trans                 &trans
            >;
        };

        spanish-symbols {
            bindings = <
&trans  &trans             &trans  &uc UC_ES_E_ACUTE  &trans  &trans    &trans                &uc UC_ES_U_ACUTE  &uc UC_ES_I_ACUTE       &uc UC_ES_O_ACUTE  &trans   &trans
&trans  &uc UC_ES_A_ACUTE  &trans  &trans             &trans  &trans    &uc UC_ES_U_DIERESIS  &uc UC_SET_LINUX   &uc UC_SET_WIN_COMPOSE  &trans             &trans   &trans
&kp F1  &kp F2             &kp F3  &kp F4             &kp F5  &kp F6    &kp F7                &kp F8             &kp F9                  &kp F10            &kp F11  &kp F12
                                   &trans             &trans  &trans    &trans                &trans             &trans
            >;
        };
    };
};
